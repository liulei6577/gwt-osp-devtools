snippet fun 定义函数
	function ${1:funcName}(${2:argument}) {
		${3:// body...}
	}

snippet cf=> 函数定义
    const ${1:funcName} = (${2:argument}) => {
        ${3:// body...}
    }

snippet f=> 箭头函数
    (${1:argument}) => {
        ${2:// body...}
    }

snippet if
	if ($1) {
		${0}
	}

snippet ifel
	if ($1) {
		${2}
	} else {
		${0}
	}

snippet switch
	switch (${1:expression}) {
		case '${3:case}':
			${4:// code}
			break;
		${5}
		default:
			${2:// code}
	}

snippet case
	case '${1:case}':
		${2:// code}
		break;
	${3}

snippet wh while块
	while (${1:/* condition */}) {
		${0:/* code */}
	}

snippet try
	try {
		${0:/* code */}
	} catch (e) {
	    ${1:/* code */}
	}

snippet do
	do {
		${2:/* code */}
	} while (${1:/* condition */});

snippet clog
	console.log(${1});

snippet cerr
	console.error(${1});

snippet ret
	return ${1:result}

snippet jsonp
	JSON.parse(${1:jstr});

snippet jsons
	JSON.stringify(${1:object});

snippet fmbrs 获取单据头
    let billRowSet = FormModel${1:1}.getBillDataSet().getRowSet(0);

snippet fmids 获取分录DataSet
    let billRowSet = FormModel${1:1}.getBillDataSet().getRowSet(0);
    let itemDataSet = billRowSet.getDataSet("$2");

snippet fords DataSet循环
    for (let ${1:i} = 0; $1 < ${2:dataSet}.getRowCount(); $1++) {
        let ${3:rowSet} = $2.getRowSet($1);$0
    }

snippet mcg MC取值
    MC.getValue("$1", $2)$0

snippet lmcg MC取值
    let $1 = MC.getValue("$1", $2)$0

snippet mcs MC放值
    MC.setValue("$1", $2)$0

snippet lmcs MC放值
    MC.setValue("$1", $1)$0

snippet newpo 创建PO
    let ${1:PO} = \$wnd.JParamObject();$0

snippet lnewds 创建DataSet
    let ${1:dataSet} = \$wnd.EFDataSet();$0

snippet newds 创建DataSet
    \$wnd.EFDataSet()

snippet lnewrs 创建RowSet
    let ${1:rowSet} = \$wnd.EFRowSet();$0

snippet newrs 创建RowSet
    \$wnd.EFRowSet()

snippet GUID 获取GUID，G开头，长度32
    \$wnd.uuid()

snippet UUID 获取UUID，带-，长度为36
    \$wnd.UUID()

snippet fm FormModel
    FormModel$1

snippet fct 获取当前时间，格式：yyyyMMdd HH:mm:ss
    \$wnd.getCurrentTime("yyyyMMdd HH:mm:ss")

snippet fctyyyyMMdd 获取当前时间，格式：yyyyMMdd
    \$wnd.getCurrentTime("yyyyMMdd")

snippet fctyyyyMM 获取当前时间，格式：yyyyMM
    \$wnd.getCurrentTime("yyyyMM")

snippet fctyyyy 获取当前时间，格式：yyyy
    \$wnd.getCurrentTime("yyyy")

snippet alertw Alert弹框MESSAGE_WARN
    //参数依次为：内容 标题 弹框类型 确定按钮文本 确定回调函数
    \$wnd.showAlert("$1", "${2:系统提示}", "MESSAGE_WARN", "${3:确定}", ${4:null});$0

snippet alerte Alert弹框MESSAGE_ERROR
    //参数依次为：内容 标题 弹框类型 确定按钮文本 确定回调函数
    \$wnd.showAlert("$1", "${2:系统提示}", "MESSAGE_ERROR", "${3:确定}", ${4:null});$0

snippet alertn Alert弹框MESSAGE_NORMAL
    //参数依次为：内容 标题 弹框类型 确定按钮文本 确定回调函数
    \$wnd.showAlert("$1", "${2:系统提示}", "MESSAGE_NORMAL", "${3:确定}", ${4:null});$0

snippet alertq Alert弹框MESSAGE_QUESTION
    //参数依次为：内容 标题 弹框类型 确定按钮文本 确定回调函数
    \$wnd.showAlert("$1", "${2:系统提示}", "MESSAGE_QUESTION", "${3:确定}", ${4:null});$0

snippet confirmw Confirm弹框MESSAGE_WARN
    //参数依次为：内容 标题 弹框类型 确定按钮文本 取消按钮文本 确定回调函数 取消回调函数
    \$wnd.showConfirm("$1", "${2:系统提示}", "MESSAGE_WARN", "${3:确定}", "${4:取消}", ${5:null}, ${6:null});$0

snippet confirme Confirm弹框MESSAGE_ERROR
    //参数依次为：内容 标题 弹框类型 确定按钮文本 取消按钮文本 确定回调函数 取消回调函数
    \$wnd.showConfirm("$1", "${2:系统提示}", "MESSAGE_ERROR", "${3:确定}", "${4:取消}", ${5:null}, ${6:null});$0

snippet confirmn Confirm弹框MESSAGE_NORMAL
    //参数依次为：内容 标题 弹框类型 确定按钮文本 取消按钮文本 确定回调函数 取消回调函数
    \$wnd.showConfirm("$1", "${2:系统提示}", "MESSAGE_NORMAL", "${3:确定}", "${4:取消}", ${5:null}, ${6:null});$0

snippet confirmq Confirm弹框MESSAGE_QUESTION
    //参数依次为：内容 标题 弹框类型 确定按钮文本 取消按钮文本 确定回调函数 取消回调函数
    \$wnd.showConfirm("$1", "${2:系统提示}", "MESSAGE_QUESTION", "${3:确定}", "${4:取消}", ${5:null}, ${6:null});$0

snippet rt0
    return returnObject.setReturnString("0");$0

snippet rt1
    return returnObject.setReturnString("1");$0

snippet SVR WebService的SVR调用
    let PO = \$wnd.JParamObject();
    //依次参数为 serviceKey paramObject dataObject webContext customObject addObject
    //参数说明：服务KEY PO 传给后台的数据dataObject webContext一般用null 传给后台的数据customObject 传给后台的数据addObject
    WebService$1.SVR("$2", PO, ${3:null}, null, ${4:null}, ${5:null});

snippet IOM WebService的IOM调用
    let PO = \$wnd.JParamObject();
    //依次参数为 objectName objectMethod paramObject dataObject webContext customObject addObject
    //参数说明：调用对象名称 调用对象方法 PO 传给后台的数据dataObject webContext一般用null 传给后台的数据customObject 传给后台的数据addObject
    WebService$1.IOM("$2", "$3", PO, ${4:null}, null, ${5:null}, ${6:null});

snippet WSCB WebService的回调
    if (!data) {
        console.error("返回结果为空");
        return;
    }

    if (data.getErrorCode() == 0) {
        //一般后台会使用ro.setResponseObject来放入返回值
        let obj = data.getResponseObject();
        if (obj) {
            /* code */
        } else {
            /* code */
        }
    } else {
        \$wnd.showAlert(data.getErrorString(), "系统提示", "MESSAGE_ERROR", "确定", null);
    }

snippet rocode 服务调用返回的ro取code
    ${1:ro}.getErrorCode()$0

snippet romsg 服务调用返回的ro取msg
    ${1:ro}.getErrorString()$0

snippet MDMSETPO MDModel设置PO
    let DCT_ID = PO.getParam("DCT_ID");

    if (DCT_ID == "$1") {

        //如果是帮助组件绑定的MDModel需要从PO中取出where条件sql，
        //否则会导致搜索条件不生效，
        //PO.getParam(DCT_ID + "_MDMSelfWhere", "");

        let whereSql = "";

        /* code */$0

        PO.setParam(DCT_ID + "_MDMSelfWhere", whereSql);
        PO.setParam(DCT_ID + "_MDMSelfOrder", "");

    }

snippet order 给PO设置orderBy
    PO.setParam(${1:DCT_ID} + "_MDMSelfOrder", "");

snippet where 给PO设置where
    PO.setParam(${1:DCT_ID} + "_MDMSelfWhere", "");

snippet lang 多语言取菜单变量
    let PO = \$wnd.JParamObject();
    let Country = PO.getEnv("Country", "");
    let International = PO.getEnv("International", "");
    let lang = International + "_" + Country;
    let ${1} = MC.getValue("${1}" + "_" + lang, MC.getValue("${1}", ""));

snippet langget 多语言取菜单变量
    let ${1} = MC.getValue("${1}" + "_" + lang, MC.getValue("${1}", ""));

snippet MDMGDS MDModel取dataSet
    let ${2:dataSet} = MDModel${1}.getMdmDataModel().getDataSet(MDModel${1}.getDCT_ID());$0

snippet CMFori ColumnModel循环取Column
    for (let ${1:i} = 0; ${1:i} < ColumnModel$2.getColumnCount(); ${1:i}++) {
        let ${3:column} = ColumnModel$2.getColumnByIndex(${1:i});
        /* code */$0
    }

snippet CMForid ColumnModel循环取Column
    let cols = [$4];//列ID
    for (let ${1:i} = 0; ${1:i} < cols.length; ${1:i}++) {
        let ${3:column} = ColumnModel$2.getColumnByDataSetColID(cols[${1:i}]);
        /* code */$0
    }

snippet getDouble EFRowSet的getDouble操作
    getDouble("$1", ${2:0})$0

snippet getString EFRowSet的getString操作
    getString("$1", "${2}")$0

snippet putDouble EFRowSet的putDouble操作
    putDouble("$1", ${2})$0

snippet putString EFRowSet的putString操作
    putString("$1", ${2})$0

snippet downloadS 静态资源下载
    function downloadFile(url, fileName) {
        fetch(url)
            .then(response => response.blob())
            .then(blob => {
                const link = document.createElement('a');
                link.href = URL.createObjectURL(blob);
                link.download = fileName;
                link.style.display = 'none';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            });
    }

    let serverBase = \$wnd.getEAIServer("${1:ZJXT}");//目标系统编号
    let url = serverBase.getObject("protocol")
        + "://" + serverBase.getObject("host")
        + ":" + serverBase.getObject("port")
        + "/" + serverBase.getObject("path")
        + "${2:/xxxxx/templateName.xlsx}";//模板文件路径，必须为静态资源路径

    downloadFile(url, "${3:XXX导入模板}");$0

snippet downloadD 动态资源下载
    //动态文件下载脚本都是在WebService组件的callback函数中使用
    //data为WebService的callback的参数
    if (data.getErrorCode() != 0) {
        \$wnd.showAlert(data.getErrorString(), "系统提示", "MESSAGE_NORMAL");
        return;
    }

    /**
     * 下载函数，一般无需修改直接使用
     * @param bytes
     * @param filename
     * @param contentType
     */
    function downloadFile(bytes, filename = "noname", contentType = "application/octet-stream") {
        if (bytes) {
            let content = new Uint8Array(bytes);
            let blob = new Blob([content], { type: contentType });
            const link = document.createElement('a');
            link.href = URL.createObjectURL(blob);
            link.download = filename;
            link.style.display = 'none';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }
    }

    let responseMap = data.getResponseMap();
    if (responseMap) {
        let map = \$wnd.JSMap();
        map.setMap(responseMap);

        //取出字节数组和文件名，后台代码需要按照此规则放值，其他情况请自行拓展修改
        let bytes = map.get("bytes");
        let filename = map.get("filename");
        let contentType = map.get("contentType");

        //使用不同的content-type浏览器会产生不同的效果，
        //例如application/pdf可能会触发浏览器的PDF预览功能，
        //详细MIME列表请参考：https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types

        downloadFile(bytes, filename, contentType);
    }

snippet gwtCall 调用未暴露的对象函数
    //参数必须以数组形式，参数依次为：组件对象 对象方法 对象方法所需参数的数组
    \$wnd.gwtCall($1, "$2", [$3]);$0

snippet gwtGet 获取对象私有属性值
    \$wnd.gwtGet($1, "$2")$0

snippet gwtSet 设置对象私有属性值
    \$wnd.gwtSet($1, "$2");$0

snippet MDMGetComps 获取MDModel关联的组件
    let comps = [];
    let compList = MDModel$1.getDMCompList();
    if (compList) {
        comps = \$wnd.gwtCall(compList, "toArray");
    }
    $0

snippet FMGetComps 获取FormModel关联的组件
    let comps = [];
    let compList = \$wnd.gwtCall(FormModel$1, "getDMCompList");
    if (compList) {
        comps = \$wnd.gwtCall(compList, "toArray");
    }
    $0

snippet forMap 遍历map
    for (let kv of ${1:map}) {
        //kv为[key, value]二值数组
        /* code */$0
    }

snippet forMapK 遍历map的key
    for (let key of ${1:map}.keys()) {
        /* code */$0
    }

snippet forMapV 遍历map的value
    for (let value of ${1:map}.values()) {
        /* code */$0
    }

snippet forSet 遍历set
    for(let value of ${1:set}) {
      /* code */$0
    }

snippet forArray 遍历array
    for(let value of ${1:array}) {
      /* code */$0
    }

snippet MetaDataDS 获取元数据DataSet
    let dctMetaData = DCTMetaDataModel$1.getDctMetaData();
    if (dctMetaData) {
        let dataSet = dctMetaData.getObject("mainDoMetaData").getDataSet("SYS_OBJCOLS");
    }
    $0